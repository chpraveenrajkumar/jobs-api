openapi: 3.0.0
info:
  title: jobs api
  contact: {}
  version: "1.0"
servers:
  - url: http://localhost:3000/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/registerrequest"
                - example:
                    name: raj
                    email: raj@gmail.com
                    password: raj@123
            example:
              name: raj
              email: raj@gmail.com
              password: raj@123
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/loginrequest"
                - example:
                    email: raj@gmail.com
                    password: raj@123
            example:
              email: raj@gmail.com
              password: raj@123
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /jobs:
    get:
      tags:
        - Jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Jobs
      summary: create jobs
      operationId: createjobs
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/createjobsrequest"
                - example:
                    company: molex
                    position: software engineer
            example:
              company: molex
              position: software engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: get single job
      operationId: getsinglejob
      parameters:
        - name: createdBy
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 63de5cf4ec761bacfd8de4cb
        - name: id
          in: path
          required: true
          description: The job ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Jobs
      summary: delete job
      operationId: deletejob
      parameters:
        - name: createdBy
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 63de5cf4ec761bacfd8de4cb
        - name: id
          in: path
          required: true
          description: The job ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: raj
        email: raj@gmail.com
        password: raj@123
    loginrequest:
      title: loginrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: raj@gmail.com
        password: raj@123
    createjobsrequest:
      title: createjobsrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: molex
        position: software engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
